openapi: 3.0.1
info:
  title: Rat API
  version: v1
paths:
  '/api/projects/{projectId}/configurations':
    post:
      tags:
        - Configurations
      operationId: Create Configuration
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConfigurationRouteInput'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConfigurationRouteOutput'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/configuration/{id}':
    get:
      tags:
        - Configurations
      operationId: Get Configuration by Id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConfigurationRouteOutput'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/projects/{projectId}/configurations/{id}':
    patch:
      tags:
        - Configurations
      operationId: Patch Configuration
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchConfigurationRouteInput'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchConfigurationRouteOutput'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - Configurations
      operationId: Delete Configuration
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/configurations/{configurationId}/entries':
    post:
      tags:
        - Entries
      operationId: Create Configuration Entry
      parameters:
        - name: configurationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConfigurationEntryRouteInput'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConfigurationEntryRouteOutput'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/configurations/{configurationId}/entries/batch':
    post:
      tags:
        - Entries
      operationId: Create Configuration Entries
      parameters:
        - name: configurationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConfigurationEntriesRouteInput'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConfigurationEntriesRouteOutput'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/configurations/{configurationId}/entries/{id}':
    patch:
      tags:
        - Entries
      operationId: Patch Configuration Entry
      parameters:
        - name: configurationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchConfigurationEntryRouteInput'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchConfigurationEntryRouteOutput'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - Entries
      operationId: Delete Configuration Entry
      parameters:
        - name: configurationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/projects:
    post:
      tags:
        - Projects
      operationId: Create Project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRouteInput'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProjectRouteOutput'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    get:
      tags:
        - Projects
      operationId: Get User Project
      responses:
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProjectForUserRouteOutput'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/projects/{id}':
    get:
      tags:
        - Projects
      operationId: Get Project by Id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProjectRouteOutput'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    patch:
      tags:
        - Projects
      operationId: Patch Project
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchProjectRouteInput'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchProjectRouteOutput'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - Projects
      operationId: Delete Project
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/HttpValidationProblemDetails'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
components:
  schemas:
    ConfigurationEntry:
      type: object
      properties:
        id:
          type: integer
          format: int32
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        secondsToLive:
          type: integer
          format: int32
        disabled:
          type: boolean
      additionalProperties: false
    ConfigurationInfo:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        typeId:
          type: integer
          format: int32
        entriesCount:
          type: integer
          format: int32
      additionalProperties: false
    CreateConfigurationEntriesRouteInput:
      type: object
      properties:
        entries:
          type: array
          items:
            $ref: '#/components/schemas/CreateConfigurationEntryRouteInput'
          nullable: true
      additionalProperties: false
    CreateConfigurationEntriesRouteOutput:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    CreateConfigurationEntryRouteInput:
      type: object
      properties:
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        secondsToLive:
          type: integer
          format: int32
        disabled:
          type: boolean
      additionalProperties: false
    CreateConfigurationEntryRouteOutput:
      type: object
      properties:
        id:
          type: integer
          format: int32
      additionalProperties: false
    CreateConfigurationRouteInput:
      type: object
      properties:
        name:
          type: string
          nullable: true
        typeId:
          type: integer
          format: int32
      additionalProperties: false
    CreateConfigurationRouteOutput:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        typeId:
          type: integer
          format: int32
      additionalProperties: false
    CreateProjectRouteInput:
      type: object
      properties:
        name:
          type: string
          nullable: true
        typeId:
          type: integer
          format: int32
      additionalProperties: false
    CreateProjectRouteOutput:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        typeId:
          type: integer
          format: int32
      additionalProperties: false
    GetConfigurationRouteOutput:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        configurationTypeId:
          type: integer
          format: int32
        entries:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationEntry'
          nullable: true
      additionalProperties: false
    GetProjectForUserRouteOutput:
      type: object
      properties:
        userId:
          type: integer
          format: int32
        projectStats:
          type: array
          items:
            $ref: '#/components/schemas/ProjectStats'
          nullable: true
      additionalProperties: false
    GetProjectRouteOutput:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        typeId:
          type: integer
          format: int32
        configurations:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationInfo'
          nullable: true
      additionalProperties: false
    HttpValidationProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
          readOnly: true
      additionalProperties: { }
    PatchConfigurationEntryRouteInput:
      type: object
      properties:
        id:
          type: integer
          format: int32
        configurationId:
          type: integer
          format: int32
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        secondsToLive:
          type: integer
          format: int32
        disabled:
          type: boolean
      additionalProperties: false
    PatchConfigurationEntryRouteOutput:
      type: object
      properties:
        id:
          type: integer
          format: int32
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        secondsToLive:
          type: integer
          format: int32
        disabled:
          type: boolean
      additionalProperties: false
    PatchConfigurationRouteInput:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        configurationTypeId:
          type: integer
          format: int32
      additionalProperties: false
    PatchConfigurationRouteOutput:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        typeId:
          type: integer
          format: int32
      additionalProperties: false
    PatchProjectRouteInput:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        typeId:
          type: integer
          format: int32
      additionalProperties: false
    PatchProjectRouteOutput:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        typeId:
          type: integer
          format: int32
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
    ProjectStats:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        totalConfigurationCount:
          type: integer
          format: int32
        totalEntryCount:
          type: integer
          format: int32
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: http
      description: Please enter token
      scheme: bearer
      bearerFormat: JWT
security:
  - Bearer: [ ]